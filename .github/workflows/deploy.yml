name: Deploy cloud run

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  generate-terraform:
    runs-on: ubuntu-latest
    outputs:
      deployment_name: ${{ steps.generate.outputs.deployment_name }}
      service_name: ${{ steps.generate.outputs.service_name }}
      cloud_run_cpu_limits: ${{ steps.generate.outputs.cloud_run_cpu_limits }}
      cloud_run_memory_limits: ${{ steps.generate.outputs.cloud_run_memory_limits }}
      cloud_run_max_instances: ${{ steps.generate.outputs.cloud_run_max_instances }}
      cloud_run_concurrency: ${{ steps.generate.outputs.cloud_run_concurrency }}
      cloud_run_env: ${{ steps.generate.outputs.cloud_run_env }}
      cloud_run_secret_env: ${{ steps.generate.outputs.cloud_run_secret_env }}
      gcp_project_id: ${{ steps.generate.outputs.gcp_project_id }}
      gcp_region: ${{ steps.generate.outputs.gcp_region }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set input value based on event type
        id: set-input
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "environment=staging" >> $GITHUB_ENV
          else
            echo "environment=prod" >> $GITHUB_ENV
          fi

      - name: Run infra-generator action
        id: generate
        uses: ./.github/actions/infra-generator
        with:
          environment: ${{ env.environment }}

  print-outputs:
    runs-on: ubuntu-latest
    needs: generate-terraform

    steps:
      - name: Print output
        shell: bash
        run: |
          echo "Output 1: ${{ needs.generate-terraform.outputs.deployment_name }}"
          echo "Output 2: ${{ needs.generate-terraform.outputs.service_name }}"
          echo "Output 3: ${{ needs.generate-terraform.outputs.cloud_run_cpu_limits }}"
          echo "Output 4: ${{ needs.generate-terraform.outputs.cloud_run_memory_limits }}"
          echo "Output 5: ${{ needs.generate-terraform.outputs.cloud_run_max_instances }}"
          echo "Output 6: ${{ needs.generate-terraform.outputs.cloud_run_concurrency }}"
          echo "Output 7: ${{ needs.generate-terraform.outputs.cloud_run_env }}"
          echo "Output 8: ${{ needs.generate-terraform.outputs.cloud_run_secret_env }}"
          echo "Output 9: ${{ needs.generate-terraform.outputs.gcp_project_id }}"
          echo "Output 10: ${{ needs.generate-terraform.outputs.gcp_region }}"
          ls -lah terraform
          cat terraform/generated.tf

